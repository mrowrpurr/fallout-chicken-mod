/*
    Main script which powers: The Cheat Chicken *bukaw!*
*/

export variable cheatchicken_config;
export variable cheatchicken_data;

#define INI_FILE      "CheatChicken.ini"
#define DATA_SAVE_KEY "cheatchicken_data"

#include "define.h"
#include "sfall/sfall.h"
#include "sfall/lib.arrays.h"

#include "CheatChicken/Messages.h"

variable config;
variable data;

procedure load_config begin
    config = {};
    fix_array(config);
    cheatchicken_config = config;

    variable section_names = get_ini_sections(INI_FILE);
    variable section_name;
    foreach section_name in section_names begin
        variable section = get_ini_section(INI_FILE, section_name);
        fix_array(section);
        config[section_name] = section;
    end

    // Consider always using atoi instead?
    config.Egg.pid = atoi(config.Egg.pid);
    config.Egg.script_id = atoi(config.Egg.script_id);
end

procedure load_data begin
    data = load_array(DATA_SAVE_KEY);
    if not data then begin
        data = {};
        fix_array(data);
        save_array(DATA_SAVE_KEY, data);
    end
    cheatchicken_data = data;
end

procedure give_egg_to_player begin
    set_proto_data(config.Egg.pid, 0x4, 23101);
    data.egg_obj = create_object_sid(config.Egg.pid, 0, 0, config.Egg.script_id);
    add_obj_to_inven(dude_obj, data.egg_obj);
end

procedure hook_description begin
    variable obj = get_sfall_arg;
    if obj == data.egg_obj then
        set_sfall_return(get_string_pointer(get_msg(MSG_EGG_DESCRIPTION)));
end

procedure hooks_register begin
    register_hook_proc(HOOK_DESCRIPTIONOBJ, hook_description);
end

procedure start begin
    if game_loaded then begin
        // variable file = fs_copy("art\\critters\\NFVREDAA.FRM", "IDLE.FRM");
        // file = fs_copy("art\\critters\\NFVREDAB.FRM", "MOVE.FRM");


   variable file, critter_flags_offset, existing_critter_flags,
            original_forms, original_walking_form,
            replacement_idle_form, replacement_walking_form;

       // All of the Vault 13 woman's forms - Note: we'll later want to be able to swap between these and NFLYNN (when we go to the Cafe of Lost Souls)
       original_forms := ["NFVREDAA.FRM", "NFVREDAK.FRM", "NFVREDAL.FRM", "NFVREDAN.FRM", "NFVREDAO.FRM", "NFVREDAP.FRM", "NFVREDAQ.FRM", "NFVREDAR.FRM", "NFVREDAS.FRM",
"NFVREDBA.FR0", "NFVREDBA.FR1", "NFVREDBA.FR2", "NFVREDBA.FR3", "NFVREDBA.FR4", "NFVREDBA.FR5", "NFVREDBB.FR0", "NFVREDBB.FR1", "NFVREDBB.FR2", "NFVREDBB.FR3",
"NFVREDBB.FR4", "NFVREDBB.FR5", "NFVREDBD.FR0", "NFVREDBD.FR1", "NFVREDBD.FR2", "NFVREDBD.FR3", "NFVREDBD.FR4", "NFVREDBD.FR5", "NFVREDBF.FR0", "NFVREDBF.FR1",
"NFVREDBF.FR2", "NFVREDBF.FR3", "NFVREDBF.FR4", "NFVREDBF.FR5", "NFVREDBG.FR0", "NFVREDBG.FR1", "NFVREDBG.FR2", "NFVREDBG.FR3", "NFVREDBG.FR4", "NFVREDBG.FR5",
"NFVREDBI.FR0", "NFVREDBI.FR1", "NFVREDBI.FR2", "NFVREDBI.FR3", "NFVREDBI.FR4", "NFVREDBI.FR5", "NFVREDBL.FR0", "NFVREDBL.FR1", "NFVREDBL.FR2", "NFVREDBL.FR3",
"NFVREDBL.FR4", "NFVREDBL.FR5", "NFVREDBM.FR0", "NFVREDBM.FR1", "NFVREDBM.FR2", "NFVREDBM.FR3", "NFVREDBM.FR4", "NFVREDBM.FR5", "NFVREDBO.FR0", "NFVREDBO.FR1",
"NFVREDBO.FR2", "NFVREDBO.FR3", "NFVREDBO.FR4", "NFVREDBO.FR5", "NFVREDBP.FR0", "NFVREDBP.FR1", "NFVREDBP.FR2", "NFVREDBP.FR3", "NFVREDBP.FR4", "NFVREDBP.FR5",
"NFVREDCH.FRM", "NFVREDCJ.FRM", "NFVREDRA.FRM", "NFVREDRB.FRM", "NFVREDRD.FRM", "NFVREDRF.FRM", "NFVREDRG.FRM", "NFVREDRI.FRM", "NFVREDRL.FRM", "NFVREDRM.FRM",
"NFVREDRO.FRM", "NFVREDRP.FRM"];

       // Replace the walking form
       original_walking_form := "NFVREDAB.FRM";
       file := fs_copy("art\\critters\\" + original_walking_form, "MOVE.frm");

       // Replace all other forms with the idle
       foreach file in original_forms begin
           file := fs_copy("art\\critters\\" + file, "IDLE.frm");
       end


        call load_config;
        call load_data;
        call hooks_register;
        call give_egg_to_player;
    end
end

